/* Header for module StrLib, generated by p2c */
#ifndef StrLibH
#define StrLibH


#ifdef StrLibG
# define vextern
#else
# define vextern extern
#endif

/*
   Author     : Gaius Mulley
   Date       : '84
   LastEdit   : 28/1/97
   Description: Provides string manipulation
*/



/*
   StrConCat - combines a and b into c.
*/

extern void StrLib_StrConCat(const int a_LOW, const int a_HIGH, const Char *a,
			     const int b_LOW, const int b_HIGH, const Char *b,
			     const int c_LOW, const int c_HIGH, Char *c);


/*
   StrLess - returns TRUE if string, a, alphabetically occurs before
             string, b.
*/

extern BOOLEAN StrLib_StrLess(const int a_LOW, const int a_HIGH,
  const Char *a, const int b_LOW, const int b_HIGH, const Char *b);


/*
   StrEqual - performs a = b on two strings.
*/

extern BOOLEAN StrLib_StrEqual(const int a_LOW, const int a_HIGH,
  const Char *a, const int b_LOW, const int b_HIGH, const Char *b);


/*
   StrLen - returns the length of string, a.
*/

extern unsigned int StrLib_StrLen(const int a_LOW, const int a_HIGH,
				  const Char *a);


/*
   StrCopy - effectively performs b := a with two strings.
*/

extern void StrLib_StrCopy(const int a_LOW, const int a_HIGH, const Char *a,
			   const int b_LOW, const int b_HIGH, Char *b);


/*
   IsSubString - returns true if b is a subcomponent of a.
*/

extern BOOLEAN StrLib_IsSubString(const int a_LOW, const int a_HIGH,
  const Char *a, const int b_LOW, const int b_HIGH, const Char *b);


/*
   StrRemoveWhitePrefix - copies string, into string, b, excluding any white
                          space infront of a.
*/

extern void StrLib_StrRemoveWhitePrefix(const int a_LOW, const int a_HIGH,
  const Char *a, const int b_LOW, const int b_HIGH, Char *b);


#undef vextern

#endif /*StrLibH*/

/* End. */
